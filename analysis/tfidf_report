#!/usr/bin/env python3
import pandas as pd
import matplotlib.pyplot as plt
from pathlib import Path

ROOT   = Path(__file__).resolve().parents[1]
TABDIR = ROOT / "reports" / "tables"
FIGDIR = ROOT / "reports" / "figures"
FIGDIR.mkdir(parents=True, exist_ok=True)

# ---- OPTIONAL: name your clusters here ----
CLUSTER_LABELS = {
    # example labels — edit/extend as you like
    12: "Forest & biodiversity conservation",
    9:  "Environmental compliance",
    10: "Climate change adaptation",
    16: "Water & sanitation",
    14: "Health programs",
    19: "Policy & advocacy",
    7:  "Community farming",
    3:  "Agricultural development",
    1:  "Administrative costs",
    2:  "NGO partnerships",
}

# ---- Inputs ----
labels_path = TABDIR / "tfidf_kmeans_labels.parquet"   # activity_id, year, tfidf_cluster
projects_path = ROOT / "dataset" / "temporaryFileToWorkWith" / "CRS_textprep.parquet"
cluster_terms_csv = TABDIR / "tfidf_cluster_top_terms.csv"  # optional: cluster,top_terms

# ---- Load ----
labels = pd.read_parquet(labels_path)          # -> activity_id, year, tfidf_cluster
projects = pd.read_parquet(projects_path)

# Money column (robust)
money_col = next((c for c in
                  ["usd_disbursement_defl","usd_commitment_defl","usd_disbursement","usd_commitment"]
                  if c in projects.columns), None)
if not money_col:
    raise SystemExit("No usd_* money column found in CRS_textprep.parquet.")

# ---- Merge money into clusters ----
labels = labels.merge(projects[["activity_id", money_col]], on="activity_id", how="left")

# ---- Aggregate funding per cluster ----
money = (labels.groupby("tfidf_cluster", as_index=False)[money_col]
               .sum()
               .rename(columns={money_col: "usd_disb"}))
money_sorted = money.sort_values("usd_disb", ascending=False).reset_index(drop=True)

# ---- Build human-readable labels ----
def make_label(cid: int) -> str:
    base = CLUSTER_LABELS.get(cid)
    return f"{cid}: {base}" if base else f"Cluster {cid}"

money_sorted["label"] = money_sorted["tfidf_cluster"].map(make_label)

# ---- LaTeX: top clusters by disbursements (with labels) ----
top_money = money_sorted.head(10).copy()
top_money_fmt = top_money.copy()
top_money_fmt["usd_disb"] = top_money_fmt["usd_disb"].map(lambda x: f"{x:,.1f}")
(TABDIR / "tfidf_top_clusters_by_money.tex").write_text(
    top_money_fmt[["tfidf_cluster","label","usd_disb"]].to_latex(
        index=False,
        caption="Top TF–IDF clusters by total disbursements (USD, millions).",
        label="tab:tfidf_top_money",
        escape=False
    )
)

# ---- Optional: LaTeX with top terms alongside money ----
if cluster_terms_csv.exists():
    terms = pd.read_csv(cluster_terms_csv)  # expects columns: cluster, top_terms
    top_terms_money = (top_money.merge(terms, left_on="tfidf_cluster", right_on="cluster", how="left")
                                 .drop(columns=["cluster"]))
    top_terms_money_fmt = top_terms_money.copy()
    top_terms_money_fmt["usd_disb"] = top_terms_money_fmt["usd_disb"].map(lambda x: f"{x:,.1f}")
    (TABDIR / "tfidf_clusters_top_terms_by_money.tex").write_text(
        top_terms_money_fmt[["tfidf_cluster","label","usd_disb","top_terms"]].to_latex(
            index=False,
            caption="TF–IDF clusters ranked by disbursements with abridged top terms.",
            label="tab:tfidf_terms_money",
            escape=False
        )
    )

# ---- Bar chart (with labels on x-axis) ----
plt.figure(figsize=(10,6))
bars = plt.bar(top_money["label"], top_money["usd_disb"])
for i, v in enumerate(top_money["usd_disb"].tolist()):
    plt.text(i, v, f"{v:,.1f}", ha="center", va="bottom", fontsize=8)
plt.ylabel("Disbursements (USD, millions)")
plt.title("Top TF–IDF clusters by disbursements")
plt.xticks(rotation=45, ha="right")
plt.grid(axis="y", linestyle="--", alpha=0.3)
plt.tight_layout()
plt.savefig(FIGDIR / "tfidf_clusters_by_money.png", dpi=300)
plt.close()

print("[TFIDF-REPORT] Wrote:")
print("  - tables/tfidf_top_clusters_by_money.tex")
if cluster_terms_csv.exists():
    print("  - tables/tfidf_clusters_top_terms_by_money.tex")
print("  - figures/tfidf_clusters_by_money.png")








